# version: '3.9'

# services:
#     db:
#         image: postgres:13
#         restart: always
#         container_name: next-cms-db
#         ports:
#             - '5433:5432'
#         environment:
#             POSTGRES_USER: prisma
#             POSTGRES_PASSWORD: prisma
#             POSTGRES_DB: next-cms-db
#         networks:
#             - my_network

#     next-app:
#         container_name: next-cms
#         build:
#             context: .
#             dockerfile: dev.Dockerfile
#         environment:
#             SITE_URL: ${SITE_URL}
#             DATABASE_URL: ${DATABASE_URL}
#             PORT: ${PORT}
#         #   ENV_VARIABLE: ${ENV_VARIABLE}
#         #   NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
#         volumes:
#             - ./public:/app/public
#             - ./uploads:/app/uploads
#         restart: always
#         ports:
#             - ${PORT}:${PORT}
#         networks:
#             - my_network

#     # Add more containers below (nginx, postgres, etc.)

# # Define a network, which allows containers to communicate
# # with each other, by using their container name as a hostname
# networks:
#     my_network:
#         external: true

# ---------------------------------------------------------------

version: '3.8'
services:
    app-dev:
        image: next-cms-db
        container_name: next-cms-db
        build:
            context: .
            dockerfile: dev.Dockerfile.dev
        # command: sleep infinity
        ports:
            - '3001:3001'
        volumes:
            - ./:/app
            - npb-app-dev-node_modules:/app/node_modules
            - npb-app-dev-next:/app/.next
        env_file:
            - ./envs/development-docker/.env.development.docker
            - ./envs/development-docker/.env.development.docker.local
        depends_on:
            - npb-db-dev
        networks:
            - internal-dev

    db-dev:
        image: postgres:14.3-bullseye
        container_name: db-dev
        restart: unless-stopped
        ports:
            - '5432:5432'
        user: '${MY_UID}:${MY_GID}'
        volumes:
            - ./prisma/pg-data:/var/lib/postgresql/data
        # only: POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB
        environment:
            - PGDATA=/var/lib/postgresql/data/data-dev
        env_file:
            - ./envs/development-docker/.env.development.docker.local
        networks:
            - internal-dev
            - external-host

    adminer-dev:
        image: 'adminer:4.8.1-standalone'
        container_name: adminer-dev
        ports:
            - '8080:8080'
        depends_on:
            - npb-db-dev
        networks:
            - internal-dev
            - external-host

volumes:
    npb-app-dev-node_modules:
    npb-app-dev-next:

networks:
    internal-dev:
        external: false
    external-host:
        external: true
