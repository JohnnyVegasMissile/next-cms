// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Page {
  id          Int               @id @default(autoincrement())
  title       String
  type        String            @default("page")
  slug        String            @unique
  // header      Element?
  sections    Section[]
  elements    Element[]
  // elements    Element[]
  metadatas   Metadata[]
  articles    Article[]
  // footer      Element?
  published   Boolean           @default(true)
  updatedAt   DateTime          @updatedAt
}

model Metadata {
  id              Int           @id @default(autoincrement())
  name            String
  content         String
  pageId          Int?
  page            Page?          @relation(fields: [pageId], references: [id])
}

model Section {
  id              Int           @id @default(autoincrement())
  type            String
  pageId          Int?
  page            Page?          @relation(fields: [pageId], references: [id])
  position        Int
  content         String?
  updatedAt       DateTime      @updatedAt
}

model Element {
  id              Int           @id @default(autoincrement())
  type            String
  pageId          Int?
  page            Page?          @relation(fields: [pageId], references: [id])
  position        Int?
  content         String?
  updatedAt       DateTime      @updatedAt
}

model Media {
  id              Int           @id @default(autoincrement())
  uri             String        @unique
  mimeType        String
  name            String
  size            Int
  alt             String?
  uploadTime      DateTime      @default(now())
}

model User {
  id              Int           @id @default(autoincrement())
  name            String?
  login           Login?
  updatedAt       DateTime      @updatedAt
}

model Login {
  id              Int           @id @default(autoincrement())
  userId          Int           @unique
  user            User          @relation(fields: [userId], references: [id])
  sessions        Session[]
  type            String        @default("user") // user admin super-admin
  email           String        @unique
  password        String
  updatedAt       DateTime      @updatedAt
}

model Session {
  id              Int           @id @default(autoincrement())
  token           String        @unique
  loginId         Int
  login           Login         @relation(fields: [loginId], references: [id])
  expiresAt       DateTime
  updatedAt       DateTime      @updatedAt
}

model Article {
  id            Int               @id @default(autoincrement())
  title         String
  slug          String            @unique
  pageId        Int?
  page          Page?             @relation(fields: [pageId], references: [id])
  published     Boolean           @default(true)
  updatedAt     DateTime          @updatedAt
}

model Setting {
  id            Int               @id @default(autoincrement())
  name          String            @unique
  value         String
  updatedAt     DateTime          @updatedAt
}