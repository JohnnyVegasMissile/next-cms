//https://gist.github.com/lancejpollard/1978404

const metadataTypes = [
    // Basic
    { value: 'keywords', label: 'Keywords', props: (e: string) => ({ content: e }) },
    { value: 'description', label: 'Description', props: (e: string) => ({ content: e }) },
    { value: 'subject', label: 'Subject', props: (e: string) => ({ content: e }) },
    { value: 'copyright', label: 'Copyright', props: (e: string) => ({ content: e }) },
    { value: 'language', label: 'Language', props: (e: string) => ({ content: e }) },
    { value: 'robots', label: 'Robots', props: (e: string) => ({ content: e }) },
    { value: 'revised', label: 'Revised', props: (e: string) => ({ content: e }) },
    { value: 'abstract', label: 'Abstract', props: (e: string) => ({ content: e }) },
    { value: 'topic', label: 'Topic', props: (e: string) => ({ content: e }) },
    { value: 'summary', label: 'Summary', props: (e: string) => ({ content: e }) },
    { value: 'Classification', label: 'Classification', props: (e: string) => ({ content: e }) },
    { value: 'author', label: 'Author', props: (e: string) => ({ content: e }) },
    { value: 'designer', label: 'Designer', props: (e: string) => ({ content: e }) },
    { value: 'copyright', label: 'Copyright', props: (e: string) => ({ content: e }) },
    { value: 'reply-to', label: 'Reply to', props: (e: string) => ({ content: e }) },
    { value: 'owner', label: 'Owner', props: (e: string) => ({ content: e }) },
    { value: 'url', label: 'Url', props: (e: string) => ({ content: e }) },
    { value: 'identifier-URL', label: 'Identifier URL', props: (e: string) => ({ content: e }) },
    { value: 'directory', label: 'Directory', props: (e: string) => ({ content: e }) },
    { value: 'category', label: 'Category', props: (e: string) => ({ content: e }) },
    { value: 'coverage', label: 'Coverage', props: (e: string) => ({ content: e }) },
    { value: 'distribution', label: 'Distribution', props: (e: string) => ({ content: e }) },
    { value: 'rating', label: 'Rating', props: (e: string) => ({ content: e }) },
    // Open graph
    { value: 'og:title', label: 'Title (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:type', label: 'Type (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:url', label: 'URL (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:image', label: 'Image (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:site_name', label: 'Site name (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:description', label: 'Description (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'fb:page_id', label: 'Page ID (Facebook)', props: (e: string) => ({ content: e }) },
    { value: 'og:email', label: 'Email (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:phone_number', label: 'Phone number (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:fax_number', label: 'Fax number (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:latitude', label: 'Latitude (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:longitude', label: 'Longitude (Open graph)', props: (e: string) => ({ content: e }) },
    {
        value: 'og:street-address',
        label: 'Street address (Open graph)',
        props: (e: string) => ({ content: e }),
    },
    { value: 'og:locality', label: 'Locality (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:region', label: 'Region (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:postal-code', label: 'Postal code (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:country-name', label: 'Country name (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:type', label: 'Type (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:points', label: 'Points (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:video', label: 'Video (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:video:height', label: 'Video height (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:video:width', label: 'Video width (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:video:type', label: 'Video type (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:audio', label: 'Audio (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:audio:title', label: 'Audio title (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:audio:artist', label: 'Audio artist (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:audio:album', label: 'Audio album (Open graph)', props: (e: string) => ({ content: e }) },
    { value: 'og:audio:type', label: 'Audio type (Open graph)', props: (e: string) => ({ content: e }) },
    // Apple
    {
        value: 'apple-mobile-web-app-capable',
        label: 'Capable (Apple)',
        props: (e: string) => ({ content: e === 'true' ? 'yes' : 'no' }),
    },
    {
        value: 'apple-touch-fullscreen',
        label: 'Fullscreen (Apple)',
        props: (e: string) => ({ content: e === 'true' ? 'yes' : 'no' }),
    },
    {
        value: 'apple-mobile-web-app-status-bar-style',
        label: 'Status bar style (Apple)',
        props: (e: string) => ({ content: e }),
    },
    {
        value: 'format-detection',
        label: 'Format detection (Apple)',
        props: (e: string) => ({ content: e === 'true' ? 'telephone=yes' : 'telephone=no' }),
    },
    { value: 'apple-touch-icon', label: 'Icon (Apple)', props: (e: string) => ({ content: e }) },
    {
        value: 'apple-touch-startup-image',
        label: 'Startup image (Apple)',
        props: (e: string) => ({ content: e }),
    },
    // Links
    { value: 'alternate', label: 'Alternate (Link)', props: (e: string) => ({ content: e }) },
    { value: 'shortcut icon', label: 'Shortcut icon (Link)', props: (e: string) => ({ content: e }) },
    { value: 'fluid-icon', label: 'Fluid icon (Link)', props: (e: string) => ({ content: e }) },
    { value: 'me', label: 'Me (Link)', props: (e: string) => ({ content: e }) },
    { value: 'shortlink', label: 'Shortlink (Link)', props: (e: string) => ({ content: e }) },
    { value: 'archives', label: 'Archives (Link)', props: (e: string) => ({ content: e }) },
    { value: 'index', label: 'Index (Link)', props: (e: string) => ({ content: e }) },
    { value: 'start', label: 'Start (Link)', props: (e: string) => ({ content: e }) },
    { value: 'prev', label: 'Prev (Link)', props: (e: string) => ({ content: e }) },
    { value: 'next', label: 'Next (Link)', props: (e: string) => ({ content: e }) },
    { value: 'search', label: 'Search (Link)', props: (e: string) => ({ content: e }) },
    { value: 'self', label: 'Self (Link)', props: (e: string) => ({ content: e }) },
    { value: 'first', label: 'First (Link)', props: (e: string) => ({ content: e }) },
    { value: 'previous', label: 'Previous (Link)', props: (e: string) => ({ content: e }) },
    { value: 'last', label: 'Last (Link)', props: (e: string) => ({ content: e }) },
    { value: 'shortlink', label: 'Shortlink (Link)', props: (e: string) => ({ content: e }) },
    { value: 'canonical', label: 'Canonical (Link)', props: (e: string) => ({ content: e }) },
    { value: 'EditURI', label: 'Edit URI (Link)', props: (e: string) => ({ content: e }) },
    { value: 'pingback', label: 'Pingback (Link)', props: (e: string) => ({ content: e }) },
]

export default metadataTypes
